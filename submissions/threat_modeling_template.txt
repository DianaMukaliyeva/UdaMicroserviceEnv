Docker Threat Modeling
Given Docker's system components and the STRIDE framework, identify five potential threats that may arise.

1. Spoofing - traffic from docker client can be spoofed

2. Tampering - docker client could be got under attacker's control and dockerfiles could be tampered

3. Information Disclosure - the client can expose the secret

4. Denial of Service - excessive traffic from docker client could overwhelm docker daemon which can lead to the crush

5. Elevation of Privilege - dokcer images could be with elevated privileges


Kubernetes Threat Modeling
Given Kubernetes' system components and the STRIDE framework, identify five potential threats that may arise.

1. Spoofing - calls to kube-apiserver can be spoofed

2. Tampering - configuration of etcd could be tampered

3. Information Disclosure - sensitive information could be retrieved from the etcd

4. Denial of Service - excessive traffic from attacker will take resources needed for the services.

5. Elevation of Privilege - privilege can be abused by using the privileged flag


Docker-bench Run Results and Analysis
From the failed findings, select and document 3 findings from the Docker-bench results that you want to harden based on the 5 attack surface areas you identified in Step 1. At least 1 of the 3 hardened findings should be different from the ones mentioned in the exercise (i.e. 5.10, 5.14, and 5.22).

1.[FAIL] 2.14 Ensure containers are restricted from acquiring new privileges (Automated)

2.[FAIL] 2.2 Ensure network traffic is restricted between containers on the default bridge (Automated)

3.[FAIL] 3.4 Ensure that docker.socket file permissions are set to 644 or more restrictive (Automated)

4.[FAIL] 3.7 Ensure that registry certificate file ownership is set to root:root (Automated)
